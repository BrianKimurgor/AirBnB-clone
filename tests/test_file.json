import unittest
import json

class TestFileJson(unittest.TestCase):

    def test_file_json(self):
        with open('file.json', 'r') as f:
            data = json.load(f)
        
        self.assertIsInstance(data, dict)
        self.assertIn("<link>BaseModel.71549f81-c52d-4db8-8ad8-5d58a23528c9</link>", data)
        self.assertIn("<link>User.1b592604-0030-462d-8633-a247a03711c1</link>", data)
        self.assertIn("<link>User.0ee84629-ed23-4f3a-9fa1-8fa18ec30bef</link>", data)
        self.assertIn("<link>User.65d95b79-61f4-4c87-9a16-1b5331ac1ac3</link>", data)
        self.assertIn("<link>User.ec368216-86d6-4945-a328-ad49085ab538</link>", data)
        self.assertIn("<link>User.ae0182e8-9d01-47f2-8a42-f6de6d2b00ee</link>", data)
        self.assertIn("<link>User.6cf02c74-52d1-4404-a5aa-bf77b58ec189</link>", data)
        self.assertIn("<link>BaseModel.d19b1a95-7108-4152-8f9b-20b630b59d72</link>", data)
        self.assertIn("<link>BaseModel.e1ad3476-9b60-40b8-8454-999cc5711c72</link>", data)
        self.assertIn("<link>BaseModel.64b9bd90-aca3-4c96-9ac8-df174e61e451</link>", data)
        self.assertIn("<link>BaseModel.480e8ae1-7af4-4208-81e3-3444c12000c2</link>", data)
        self.assertIn("<link>State.2fff666c-344a-4885-a03c-529a1da919a9</link>", data)

        base_model_data = data["BaseModel.71549f81-c52d-4db8-8ad8-5d58a23528c9"]
        self.assertEqual(base_model_data["id"], "71549f81-c52d-4db8-8ad8-5d58a23528c9")
        self.assertEqual(base_model_data["created_at"], "2023-10-12T12:59:39.832801")
        self.assertEqual(base_model_data["updated_at"], "2023-10-12T12:59:39.832890")
        self.assertEqual(base_model_data["name"], "My First Model")
        self.assertEqual(base_model_data["my_number"], 89)
        self.assertEqual(base_model_data["__class__"], "BaseModel")

        user_data = data["User.1b592604-0030-462d-8633-a247a03711c1"]
        self.assertEqual(user_data["id"], "1b592604-0030-462d-8633-a247a03711c1")
        self.assertEqual(user_data["created_at"], "2023-10-12T13:01:42.532165")
        self.assertEqual(user_data["updated_at"], "2023-10-12T13:01:42.532179")
        self.assertEqual(user_data["first_name"], "Betty")
        self.assertEqual(user_data["last_name"], "Bar")
        self.assertEqual(user_data["email"], "airbnb@mail.com")
        self.assertEqual(user_data["password"], "root")
        self.assertEqual(user_data["__class__"], "User")

        # Add assertions for the rest of the data entries

if __name__ == '__main__':
    unittest.main()
